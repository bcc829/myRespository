<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Jeong's  blog]]></title><description><![CDATA[개발 기록들을 저장 하는 곳 입니다.]]></description><link>https://jeong-develop-repository.netlify.com</link><generator>RSS for Node</generator><lastBuildDate>Thu, 11 Apr 2019 07:14:32 GMT</lastBuildDate><item><title><![CDATA[Kotlin에서 QueryDsl 셋팅하기(Gradle)]]></title><description><![CDATA[Kotlin에서 QueryDsl 셋팅]]></description><link>https://jeong-develop-repository.netlify.com/posts/setting-QueryDsl-with-gradle-and-Kotlin/</link><guid isPermaLink="false">https://jeong-develop-repository.netlify.com/posts/setting-QueryDsl-with-gradle-and-Kotlin/</guid><pubDate>Wed, 10 Apr 2019 07:31:32 GMT</pubDate><content:encoded>&lt;p&gt;개인 공부를 위해 Kotlin + Spring boot를 이용하여 프로젝트를 진행하던 중
QueryDsl을 사용하기 위해 셋팅을 하여도 잘 되지 않아 고생 한 적이 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/querydsl_commit.PNG&quot; alt=&quot;querydsl_commit&quot;&gt;
(spring boot도 JPA도 Kotlin도 gradle마저 익숙하지 않아 QueryDsl을 설정 하다가 오랜 기간 손을 놓은 모습…)&lt;/p&gt;
&lt;p&gt;example 코드를 찾았지만 QueryDsl 버전을 3.xx로 쓰고 있어 아래와 같이 버전을 4.xx로 수정하였습니다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;tsx&quot;&gt;&lt;pre class=&quot;language-tsx&quot;&gt;&lt;code class=&quot;language-tsx&quot;&gt;buildscript &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  	ext &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		kotlinVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;1.3.11&apos;&lt;/span&gt;
		queryDslVersion &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;4.1.3&apos;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//QueryDsl version&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  repositories &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;mavenCentral&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  dependencies &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    classpath &lt;span class=&quot;token string&quot;&gt;&quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

apply plugin&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;kotlin&apos;&lt;/span&gt;
apply plugin&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;kotlin-kapt&apos;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Annotation Processing with Kotlin&lt;/span&gt;
apply plugin&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;idea&apos;&lt;/span&gt;

dependencies &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;com.querydsl:querydsl-jpa:${queryDslVersion}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;kapt&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;com.querydsl:querydsl-apt:${queryDslVersion}:jpa&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

idea &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    def kaptMain &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;build/generated/source/kapt/main&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    sourceDirs &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; kaptMain
    generatedSourceDirs &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; kaptMain
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;build.gradle에 위의 내용들을 추가 후 &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;tsx&quot;&gt;&lt;pre class=&quot;language-tsx&quot;&gt;&lt;code class=&quot;language-tsx&quot;&gt;gradlew compileKotlin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;compileKotlin task를 실행 하게 되면&lt;/p&gt;
&lt;p&gt;다음과 같이 build/generated/source/kapt/main에 Qdomain이 생성 됩니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/Qdomain.PNG&quot; alt=&quot;Qdomain&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ref&quot;&gt;&lt;a href=&quot;#ref&quot; aria-label=&quot;ref permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ref&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/kotlin-querydsl&quot;&gt;https://github.com/JetBrains/kotlin-examples/tree/master/gradle/kotlin-querydsl&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Window10에서 npm install시 Failed at the pngquant-bin@5.0.2 postinstall script 에러가 나는 경우 해결법]]></title><description><![CDATA[pngquant-bin@5.0.2 postinstall script 에러 해결법]]></description><link>https://jeong-develop-repository.netlify.com/posts/failed-at-the-pngquant/</link><guid isPermaLink="false">https://jeong-develop-repository.netlify.com/posts/failed-at-the-pngquant/</guid><pubDate>Sun, 31 Mar 2019 06:30:32 GMT</pubDate><content:encoded>&lt;p&gt;블로그를 시작하기위해 Gatsby를 이용하여 환경 설정 중
package를 받기위해 npm install을 실행 하였는데 다음과 같은 에러가 났습니다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;tsx&quot;&gt;&lt;pre class=&quot;language-tsx&quot;&gt;&lt;code class=&quot;language-tsx&quot;&gt;error code &lt;span class=&quot;token constant&quot;&gt;ELIFECYCLE&lt;/span&gt;
error errno &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
error pngquant&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;bin@&lt;span class=&quot;token number&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;.2&lt;/span&gt; postinstall&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`node lib/install.js`&lt;/span&gt;&lt;/span&gt;
error Exit status &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
error Failed at the pngquant&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;bin@&lt;span class=&quot;token number&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;.2&lt;/span&gt; postinstall script&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
error This &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; probably not a problem &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; npm&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; There &lt;span class=&quot;token keyword&quot;&gt;is&lt;/span&gt; likely additional logging output above&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
verbose exit &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;해당 라이브러리 폴더에 들어가서 파일들을 확인해 보던 중
pngquant-bin\vendor 폴더 안에 있는&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/pngquant.PNG&quot; alt=&quot;pngquant&quot;&gt;&lt;/p&gt;
&lt;p&gt;pngquant.exe를 실행하여 보았더니 다음과 같은 에러 창이 나왔습니다&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/VCRUNTIME140-dll.PNG&quot; alt=&quot;VCRUNTIME140-dll&quot;&gt;&lt;/p&gt;
&lt;p&gt;아래의 주소에서 Visual Studio 2015용 Visual C++ 재배포 가능 패키지를 설치 후
&lt;a href=&quot;https://www.microsoft.com/ko-kr/download/details.aspx?id=48145&quot;&gt;https://www.microsoft.com/ko-kr/download/details.aspx?id=48145&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;다시 npm install을 실행하니 에러 없이 정상적으로 작동 하였습니다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[블로그 시작합니다]]></title><description><![CDATA[블로그 시작]]></description><link>https://jeong-develop-repository.netlify.com/posts/blog-start/</link><guid isPermaLink="false">https://jeong-develop-repository.netlify.com/posts/blog-start/</guid><pubDate>Sat, 30 Mar 2019 13:40:32 GMT</pubDate><content:encoded>&lt;p&gt;프론트엔드 공부와 개인적인 개발 기록을 남기기 위해 블로그를 시작하게 되었습니다.&lt;/p&gt;
&lt;p&gt;블로그 플랫폼을 이용하여 만들 수도 있지만 직접 개발하는게 더 재미 있고 애착이 생길거 같아 Gatsby를 이용하여 만들게 되었습니다.&lt;/p&gt;
&lt;p&gt;개발중 발생한 문제들과 해결법들에 대해 간략하게 기록 해보려고 합니다.&lt;/p&gt;
&lt;p&gt;감사합니다.&lt;/p&gt;
&lt;p&gt;블로그 만드는 법은 이분의 글을 참조 하여 만들었습니다.
&lt;a href=&quot;https://sosolog.netlify.com/posts/gatsbyJS-blog/&quot;&gt;https://sosolog.netlify.com/posts/gatsbyJS-blog/&lt;/a&gt;&lt;/p&gt;</content:encoded></item></channel></rss>